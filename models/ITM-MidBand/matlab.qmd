---
title: "ITM-MidBand - MATLAB"
---

::: {.callout-warning}
## Page Under Construction

This page is still under construction and has not yet been finalized. Information may be outdated,incorrect, or missing. While this message is visible, contact [code@ntia.gov](mailto:code@ntia.gov) with any questions.
:::
The package name to install is `itm`.  The package can be found in the matpak repo with the following command:

```
matpak search itm
```

## Installing Package

Use the following command to install `itm` from the matpak repo:

```
matpak install itm
```

The packag can be installed directly into your working directory or in a seperate directory that you include in your execution path.

## Documentation

All `itm` functions are docummented with detailed headers, such as:

```matlab
% Function ITM_P2P_TLS(...)
%
% Description: Calculates the propagation loss between antennas
%       using ITM
%
% Inputs:
%   h_tx__meter : Structural height of the TX, in meters
%   h_rx__meter : Structural height of the RX, in meters
%   radio_climate : Radio climate
%   time : Time percentage (0 < p < 100)
%   location : Location percentage (0 < p < 100)
%   situation : Situation percentage (0 < p < 100)
%   pfl : Terrain data, in PFL format
%   N_0 : Refractivity, in N-Units
%   f__mhz : Frequency, in MHz
%   polarization : Polarization
%   epsilon : Relative permittivity
%   sigma : Conductivity
%   mdvar : Mode of variability
%
% Outputs:
%   rtn : Error code
%   A__db : Basic transmission loss, in dB
%   warnings : Warning flags
%   interValues : Intermedate values
```

# Examples

**Note:** These examples use an artificial terrain profile.

## Point-to-Point Basic Transmission Loss (TLS)

```matlab
% define the terrain profile in PFL format
pfl = [5, 200, 5, 7, 2, 4, 7, 5];

% define link parameters
f__mhz = 3500;                      % MHz
h_tx__meter = 10;                   % meters, AGL
h_rx__meter = 5;                    % meters, AGL
N_0 = 301;                          % N-Units
epsilon = 15;                       % average ground
sigma = 0.005;                      % average ground
climate = ITMClimate.ContinentalTemperate;
pol = ITMPolarization.Horizontal;

% define variability parameters
mdvar = 13;
time = 50;                          % median
location = 50;                      % median
situation = 50;                     % median

% call ITM
[rtn, A__db, warnings, ivals] = ITM.ITM_P2P_TLS(h_tx__meter, h_rx__meter, ...
    pfl, climate, N_0, f__mhz, pol, epsilon, sigma, mdvar, ...
    time, location, situation)
% rtn = 0                           % no errors
% A__db = 105.8590                  % basic transmission loss, in dB
% warnings = 0                      % no warnings

% can use the intermediate values object to access additional information
% from the ITM prediction
fprintf('The mode of propagation is %s\n', ivals.Mode)
fprintf('The effective height of the TX is %f meters\n', ivals.h_e__meter(1))
fprintf('The free space basic transmission loss is %f dB\n', ivals.A_fs__db)
% The mode of propagation is LineOfSight
% The effective height of the TX is 10.222222222222221 meters.
% The free space basic transmission loss is 103.33136088700552 dB.
```

## Point-to-Point Basic Transmission Loss (CR)

```matlab
% define the terrain profile in PFL format
pfl = [5, 200, 5, 7, 2, 4, 7, 5];

% define link parameters
f__mhz = 1500;                      % MHz
h_tx__meter = 10;                   % meters, AGL
h_rx__meter = 5;                    % meters, AGL
N_0 = 301;                          % N-Units
epsilon = 15;                       % average ground
sigma = 0.005;                      % average ground
climate = ITMClimate.ContinentalTemperate;
pol = ITMPolarization.Horizontal;

% define variability parameters
mdvar = 13;
confidence = 50;                    % median
reliability = 50;                   % median

% call ITM
[rtn, A__db, warnings, ivals] = ITM.ITM_P2P_CR(h_tx__meter, h_rx__meter, ...
    pfl, climate, N_0, f__mhz, pol, epsilon, sigma, mdvar, ...
    confidence, reliability)
% rtn = 0                           % no errors
% A__db = 99.9744                   % basic transmission loss, in dB
% warnings = 0                      % no warnings

% can use the intermediate values object to access additional information
% from the ITM prediction
fprintf('The mode of propagation is %s\n', ivals.Mode)
fprintf('The effective height of the TX is %f meters\n', ivals.h_e__meter(1))
fprintf('The free space basic transmission loss is %f dB\n', ivals.A_fs__db)
% The mode of propagation is LineOfSight
% The effective height of the TX is 10.222222222222221 meters.
% The free space basic transmission loss is 95.971825 dB.
```

## Area Mode Basic Transmission Loss (TLS)

```matlab
% define link parameters
f__mhz = 1500;                      % MHz
h_tx__meter = 10;                   % meters, AGL
h_rx__meter = 5;                    % meters, AGL
N_0 = 301;                          % N-Units
epsilon = 15;                       % average ground
sigma = 0.005;                      % average ground
d__km = 100;                        % km
delta_h__meter = 40;                % meter
tx_site_criteria = ITMSitingCriteria.Careful;
rx_site_criteria = ITMSitingCriteria.Careful;
climate = ITMClimate.ContinentalTemperate;
pol = ITMPolarization.Horizontal;

% define variability parameters
mdvar = 13;
time = 50;                          % median
location = 50;                      % median
situation = 50;                     % median

% call ITM
[rtn, A__db, warnings, ivals] = ITM.ITM_AREA_TLS(h_tx__meter, h_rx__meter, ... 
    tx_site_criteria, rx_site_criteria, d__km, delta_h__meter, climate, ...
    N_0, f__mhz, pol, epsilon, sigma, mdvar, time, location, situation)
% rtn = 0                           % no errors
% A__db = 191.0266                  % basic transmission loss, in dB
% warnings = 0                      % no warnings

% can use the intermediate values object to access additional information
% from the ITM prediction
fprintf('The mode of propagation is %s\n', ivals.Mode)
fprintf('The effective height of the TX is %f meters.\n', ivals.h_e__meter(1))
fprintf('The free space basic transmission loss is %f dB.\n', ivals.A_fs__db)
% The mode of propagation is Troposcatter
% The effective height of the TX is 13.032653 meters.
% The free space basic transmission loss is 135.971825 dB.
```

## Area Mode Basic Transmission Loss (CR)

```matlab
% define link parameters
f__mhz = 5000;                      % MHz
h_tx__meter = 10;                   % meters, AGL
h_rx__meter = 5;                    % meters, AGL
N_0 = 301;                          % N-Units
epsilon = 15;                       % average ground
sigma = 0.005;                      % average ground
d__km = 100;                        % km
delta_h__meter = 40;                % meter
tx_site_criteria = ITMSitingCriteria.Careful;
rx_site_criteria = ITMSitingCriteria.Careful;
climate = ITMClimate.ContinentalTemperate;
pol = ITMPolarization.Horizontal;

% define variability parameters
mdvar = 13;
confidence = 50;                    % median
reliability = 50;                   % median

% call ITM
[rtn, A__db, warnings, ivals] = ITM.ITM_AREA_CR(h_tx__meter, h_rx__meter, ... 
    tx_site_criteria, rx_site_criteria, d__km, delta_h__meter, climate, ...
    N_0, f__mhz, pol, epsilon, sigma, mdvar, confidence, reliability)
% rtn = 0                           % no errors
% A__db = 205.7474                  % basic transmission loss, in dB
% warnings = 0                      % no warnings

% can use the intermediate values object to access additional information
% from the ITM prediction
fprintf('The mode of propagation is %s\n', ivals.Mode)
fprintf('The effective height of the TX is %f meters.\n', ivals.h_e__meter(1))
fprintf('The free space basic transmission loss is %f dB.\n', ivals.A_fs__db)
% The mode of propagation is Troposcatter
% The effective height of the TX is 13.032653 meters.
% The free space basic transmission loss is 146.429400 dB.
```