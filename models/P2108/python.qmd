---
title: "ITU-R P.2108 - Python"
---
::: {.callout-warning}
## Page Under Construction

This page is still under construction and has not yet been finalized. Information may be outdated, incorrect, or missing. While this message is visible, contact [code@ntia.gov](mailto:code@ntia.gov) with any questions.
:::

**TODO** Section outdated

The package name to install is `p2108`

```python
import p2108

print(p2108.__version__)
```

or 

```
>> pip show p2108
```

## Dependencies

The `p2108` package has no dependencies.

## Installing Package

**TODO** Section outdated

Use the following command to install `p2108` from the local pip repo:

For ITS users:
```
pip install p2108 --no-index --find-links file://itsfs01/Tools/Python/pip
```

For OSM (or HCHB) users,
```
pip install p2108 --no-index --find-links file://nthnetapp002g.ntiadc.ntia.doc.gov/ntiadropbox/itsdata/Python/pip
```

## Getting Started

Importing `P2108` is as simple as including the following in your `.py` file:

```python
from ITS.ITU.PSeries import P2108
```

## Documentation

All `P2108` functions contain built-in docstring help.  This means that if your python development editor supports it, it can provide you with assistance on information such as function description, parameter types and descriptions, and return details.

This also means that `help()` is supported in the console to provide information.

# Examples

## Height Gain Terminal Correction Model

```python
# define inputs
f__ghz = 1          # Frequency, in GHz
h__meter = 1.5      # Antenna height, in meters
w_s__meter = 27     # Street width, in meters
R__meter = 20       # Representative clutter height, in meters
clutter_type = 6    # Clutter type, enum

# Call height gain terminal correction model (P.2108 Section 3.1)
A_h__db = P2108.HeightGainTerminalCorrectionModel(f__ghz, h__meter, w_s__meter, R__meter, clutter_type)
assert(A_h__db == 8.769394261533549)

# can also use clutter type IntEnum
clutter_type = P2108.ClutterType.DenseUrban

# call clutter model
A_h__db = P2108.HeightGainTerminalCorrectionModel(f__ghz, h__meter, w_s__meter, R__meter, clutter_type)
assert(A_h__db == 8.769394261533549)
```

## Terrestrial Statistical Model

```python
# define inputs
f__ghz = 3          # Frequency, in GHz
d__km = 0.5         # Path distance, in km
p = 50              # Percentage of locations, in %

# call terrestrial statistical model
L_ctt__db = P2108.TerrestrialStatisticalModel(f__ghz, d__km, p)
assert(L_ctt__db == 26.10075036783342)
```

## Aeronautical Statistical Model

```python
# define inputs
f__ghz = 15         # Frequency, in GHz
theta__deg = 10     # Elevation angle, in degrees
p = 50              # Percentage of locations, in %

# call clutter model
L_ces__db = P2108.AeronauticalStatisticalModel(f__ghz, theta__deg, p)
assert(L_ces__db == 14.333686040067786)
```
